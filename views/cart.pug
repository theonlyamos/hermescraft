extends layout

block content
  // Cart
  section.cart.bgwhite.p-t-70.p-b-100
    .container
      // Cart item
      .container-table-cart.pos-relative
        .wrap-table-shopping-cart.bgwhite
          table.table-shopping-cart
            thead
              tr.table-head
                th.column-1
                th.column-2 Product
                th.column-3 Price
                th.column-4.p-l-70 Quantity
                th.column-5 Total
                th.column-6 
            tbody
              each item in cart
                tr.table-row
                  td.column-1
                    .cart-img-product.b-rad-4.o-f-hidden
                      img(src="/images/products/"+item.image alt="IMG-PRODUCT")
                  td.column-2 #{item.name}
                  td.column-3 $#{parseFloat(item.price).toFixed(2)}
                  td.column-4
                    .flex-w.bo5.of-hidden.w-size17
                      button.btn-num-product-down.color1.flex-c-m.size7.bg8.eff2
                        i.fs-12.fa.fa-minus(aria-hidden="true")
                      input.size8.m-text18.t-center.num-product(type="number" name="num-product1" value=item.quantity)
                      button.btn-num-product-up.color1.flex-c-m.size7.bg8.eff2
                        i.fs-12.fa.fa-plus(aria-hidden="true")
                  td.column-5 $#{item.total.toFixed(2)}
                  td.column-6
                    .flex-w.of-hidden.w-size17.align-items-center.justify-content-center
                      a.btn.btn-outline-danger.flex-c-m.size7.eff2.rounded-circle(href="/cart/remove?item="+item.id)
                        i.fs-12.fa.fa-times(aria-hidden="true")
      //
        .flex-w.flex-sb-m.p-t-25.p-b-25.bo8.p-l-35.p-r-60.p-lr-15-sm.justify-content-end
          .size10.trans-0-4.m-t-10.m-b-10
            // Button
            button.flex-c-m.sizefull.bg1.bo-rad-23.hov1.s-text1.trans-0-4
              | Update Cart
      // Total
      .bo9.w-size18.p-l-40.p-r-40.p-t-30.p-b-38.m-t-30.m-r-0.m-l-auto.p-lr-15-sm
        h5.m-text20.p-b-24
          | Cart Totals
        // 
          .flex-w.flex-sb-m.p-b-12
            span.s-text18.w-size19.w-full-sm
              | Subtotal:
            span.m-text21.w-size20.w-full-sm
              | $#{cartTotal.toFixed(2)}
        // 
          .flex-w.flex-sb.bo10.p-t-15.p-b-20
            span.s-text18.w-size19.w-full-sm
              | Shipping:
            .w-size20.w-full-sm
              //p.s-text8.p-b-23
                | There are no shipping methods available. Please double check your address, or contact us if you need any help.
              span.s-text19
                | Calculate Shipping
              .rs2-select2.rs3-select2.rs4-select2.bo4.of-hidden.w-size21.m-t-8.m-b-12
                select.selection-2(name="country")
                  option Select a country...
                  option US
                  option UK
                  option Japan
              .size13.bo4.m-b-12
                input.sizefull.s-text7.p-l-15.p-r-15(type="text" name="state" placeholder="State /  country")
              .size13.bo4.m-b-22
                input.sizefull.s-text7.p-l-15.p-r-15(type="text" name="postcode" placeholder="Postcode / Zip")
              .size14.trans-0-4.m-b-10
                // Button
                button.flex-c-m.sizefull.bg1.bo-rad-23.hov1.s-text1.trans-0-4
                  | Update Totals
        // 
        .flex-w.flex-sb-m.p-t-26.p-b-30
          span.m-text22.w-size19.w-full-sm
            | Total:
          span.m-text21.w-size20.w-full-sm
            | $#{cartTotal.toFixed(2)}
        .size15.trans-0-4
          // Button
          button.flex-c-m.sizefull.bg1.bo-rad-23.hov1.s-text1.trans-0-4#checkout-button
            | Proceed to Checkout
block scripts
  script(src="https://js.stripe.com/v3/")
  script(type="text/javascript").
    // Create an instance of the Stripe object with your publishable API key
    var stripe = Stripe("pk_test_wlPj0KvFkjym9mrxbootdYVL00AzjkpcAe");
    var checkoutButton = document.getElementById('checkout-button');

    checkoutButton.addEventListener('click', function() {
      // Create a new Checkout Session using the server-side endpoint you
      // created in step 3.
      fetch('/checkout', {
        method: 'POST',
        headers: {
          "Content-Type": "application/json"
        }
      })
      .then(function(response) {
        return response.json();
      })
      .then(function(session) {
        return stripe.redirectToCheckout({ sessionId: session.id });
      })
      .then(function(result) {
        // If `redirectToCheckout` fails due to a browser or network
        // error, you should display the localized error message to your
        // customer using `error.message`.
        if (result.error) {
          console.log(error)
          alert(result.error.message);
        }
      })
      .catch(function(error) {
        console.error('Error:', error);
      });
    });
    